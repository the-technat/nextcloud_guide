---
# Taken from https://github.com/ReinerNippes/nextcloud/blob/master/roles/prep_nextcloud/tasks/main.yml
# - name: generate admin passwd if nextcloud_passwd is empty
#   set_fact:
#     nc_passwd: "{{ lookup('password', '{{ credential_store }}/nextcloud_admin_secret chars=ascii_letters,digits length=32') }}"
#   when: nc_passwd == ''
- name: download nextcloud archive
  get_url:
    url:  "{{ next_archive }}"
    dest: /tmp/nextcloud.tar.bz2
    checksum: "sha256:{{ next_archive }}.sha256"
- name: install nextcloud
  unarchive: 
    src: /tmp/nextcloud.tar.bz2
    dest: "/var/www"
    remote_src: true
    creates: "/var/www/nextcloud/occ" # only download files when they don't exist
- name: Ensure permissions on webroot
  file:
    dest: "/var/www/nextcloud"
    owner: "{{ web_user }}"
    group: "{{ web_user }}"
    mode: '770'
    recurse: yes
- name: Ensure permissions on data dir
  file:
    dest: "{{ data_dir }}"
    owner: "{{ web_user }}"
    group: "{{ web_user }}"
    mode: '770'
    recurse: yes
- name: Verify if Nextcloud is installed
  become: yes
  become_user: "{{ web_user }}"
  register: install_status
  shell: >
    php occ status 
  changed_when: true != true
  args:
    chdir: "/var/www/nextcloud"
- name: Install Nextcloud if not installed
  become: yes
  become_user: "{{ web_user }}"
  shell: >
    php occ maintenance:install 
    --database "mysql"
    --database-host "localhost:3306" 
    --database-name {{ nc_db }} 
    --database-user {{ nc_db_user }} 
    --database-pass {{ nc_db_password }} 
    --admin-user {{ nc_admin }} 
    --admin-pass {{ nc_passwd }} 
    --data-dir {{ data_dir }}
  when: 'install_status.stdout.find("installed: false") != -1'
  args:
    chdir: "/var/www/nextcloud"
  register: setup_nc
  notify: restart nginx
- name: nextcloud cronjob present
  cron:
    name: nextcloud cronjob
    minute: '*/5'
    user: "{{ web_user }}" 
    job: "php -f /var/www/nextcloud/cron.php > /dev/null 2>&1"

# - name: set nextcloud domain config.php values
#   become_user: "{{ web_user[ansible_distribution] }}"
#   become_flags: "{{ ansible_become_flags | default(omit) }}"
#   become: yes
#   shell: php occ config:system:set {{ item.key }} {{ item.value }}
#   args:
#     chdir: /var/www/nextcloud/
#   with_items: "{{ nc_config }}"

# - name: set nextcloud mail config.php values
#   become_user: "{{ web_user[ansible_distribution] }}"
#   become_flags: "{{ ansible_become_flags | default(omit) }}"
#   become: yes
#   shell: php occ config:system:set {{ item.key }} {{ item.value }}
#   args:
#     chdir: /var/www/nextcloud/
#   with_items: "{{ nc_mail_config }}"
#   when: nc_configure_mail|bool

# - name: copy defaults/config.json to /tmp 
#   copy:
#     src: "{{ role_path }}/defaults/config.json"
#     dest: /tmp/nextcloud.config.json
#     owner: "{{ web_user[ansible_distribution] }}"
#     mode: 0600
    
# - name: set default config
#   become_user: "{{ web_user[ansible_distribution] }}"
#   become_flags: "{{ ansible_become_flags | default(omit) }}"
#   become: yes
#   shell: php occ config:import /tmp/nextcloud.config.json
#   args:
#     chdir: /var/www/nextcloud/
#   register: setup_nc

# - name: copy defaults/config.json to /tmp 
#   file:
#     name: /tmp/nextcloud.config.json
#     state: absent

# - debug: var=setup_nc verbosity=2

# - name: backup jobs, upgrade apps and database tuning
#   become_user: "{{ web_user[ansible_distribution] }}"
#   become_flags: "{{ ansible_become_flags | default(omit) }}"
#   become: yes
#   shell: php occ {{ item }}
#   args:
#     chdir: /var/www/nextcloud/
#   loop:
#     - background:cron
#     - upgrade
#     - db:add-missing-indices
#     - db:convert-filecache-bigint
    
# - name: upgrade nextcloud
#   become_user: "{{ web_user[ansible_distribution] }}"
#   become_flags: "{{ ansible_become_flags | default(omit) }}"
#   become: yes
#   shell: php occ upgrade
#   args:
#     chdir: /var/www/nextcloud/

# - name: adjust app settings
#   become_user: "{{ web_user[ansible_distribution] }}"
#   become_flags: "{{ ansible_become_flags | default(omit) }}"
#   become: yes
#   shell: php occ app:{{ item.key }} {{ item.value }}
#   args:
#     chdir: /var/www/nextcloud/
#   with_items: "{{ nc_app_config }}"


  
# - name: run nextcloud cronjob
#   become_user: "{{ web_user[ansible_distribution] }}"
#   become_flags: "{{ ansible_become_flags | default(omit) }}"
#   become: yes
#   shell: php -f /var/www/nextcloud/cron.php
#   args:
#     chdir: /var/www/nextcloud/
#   when: setup_nc is changed
